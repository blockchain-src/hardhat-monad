// This file was autogenerated by hardhat-viem, do not edit it.
// prettier-ignore
// tslint:disable
// eslint-disable

import type { Address } from "viem";
import type { AbiParameterToPrimitiveType, GetContractReturnType } from "@nomicfoundation/hardhat-viem/types";
import "@nomicfoundation/hardhat-viem/types";

export interface Voting$Type {
  "_format": "hh-sol-artifact-1",
  "contractName": "Voting",
  "sourceName": "contracts/Voting.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_proposal",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "voter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "vote",
          "type": "bool"
        }
      ],
      "name": "Voted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "noCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposal",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_vote",
          "type": "bool"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "votes",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "yesCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50604051610b8a380380610b8a833981810160405281019061003291906101bd565b80600090816100419190610427565b50506104f9565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6100af82610066565b810181811067ffffffffffffffff821117156100ce576100cd610077565b5b80604052505050565b60006100e1610048565b90506100ed82826100a6565b919050565b600067ffffffffffffffff82111561010d5761010c610077565b5b61011682610066565b9050602081019050919050565b60005b83811015610141578082015181840152602081019050610126565b60008484015250505050565b600061016061015b846100f2565b6100d7565b90508281526020810184848401111561017c5761017b610061565b5b610187848285610123565b509392505050565b600082601f8301126101a4576101a361005c565b5b81516101b484826020860161014d565b91505092915050565b6000602082840312156101d3576101d2610052565b5b600082015167ffffffffffffffff8111156101f1576101f0610057565b5b6101fd8482850161018f565b91505092915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061025857607f821691505b60208210810361026b5761026a610211565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026102d37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610296565b6102dd8683610296565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600061032461031f61031a846102f5565b6102ff565b6102f5565b9050919050565b6000819050919050565b61033e83610309565b61035261034a8261032b565b8484546102a3565b825550505050565b600090565b61036761035a565b610372818484610335565b505050565b5b818110156103965761038b60008261035f565b600181019050610378565b5050565b601f8211156103db576103ac81610271565b6103b584610286565b810160208510156103c4578190505b6103d86103d085610286565b830182610377565b50505b505050565b600082821c905092915050565b60006103fe600019846008026103e0565b1980831691505092915050565b600061041783836103ed565b9150826002028217905092915050565b61043082610206565b67ffffffffffffffff81111561044957610448610077565b5b6104538254610240565b61045e82828561039a565b600060209050601f831160018114610491576000841561047f578287015190505b610489858261040b565b8655506104f1565b601f19841661049f86610271565b60005b828110156104c7578489015182556001820191506020850194506020810190506104a2565b868310156104e457848901516104e0601f8916826103ed565b8355505b6001600288020188555050505b505050505050565b610682806105086000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80634b9f5c981461005c5780635c8d954114610078578063753ec10314610096578063a2fcbad7146100b4578063d8bff5a5146100d2575b600080fd5b6100766004803603810190610071919061036a565b610102565b005b610080610273565b60405161008d91906103b0565b60405180910390f35b61009e610279565b6040516100ab919061045b565b60405180910390f35b6100bc610307565b6040516100c991906103b0565b60405180910390f35b6100ec60048036038101906100e791906104db565b61030d565b6040516100f99190610517565b60405180910390f35b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561018f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101869061057e565b60405180910390fd5b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550801561020957600260008154809291906101ff906105cd565b9190505550610222565b6003600081548092919061021c906105cd565b91905055505b3373ffffffffffffffffffffffffffffffffffffffff167f8eb81cb806dbb3d8a2f94981614331a55dfd90e06a42fdc362ca3ca96981d92f826040516102689190610517565b60405180910390a250565b60025481565b6000805461028690610644565b80601f01602080910402602001604051908101604052809291908181526020018280546102b290610644565b80156102ff5780601f106102d4576101008083540402835291602001916102ff565b820191906000526020600020905b8154815290600101906020018083116102e257829003601f168201915b505050505081565b60035481565b60016020528060005260406000206000915054906101000a900460ff1681565b600080fd5b60008115159050919050565b61034781610332565b811461035257600080fd5b50565b6000813590506103648161033e565b92915050565b6000602082840312156103805761037f61032d565b5b600061038e84828501610355565b91505092915050565b6000819050919050565b6103aa81610397565b82525050565b60006020820190506103c560008301846103a1565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156104055780820151818401526020810190506103ea565b60008484015250505050565b6000601f19601f8301169050919050565b600061042d826103cb565b61043781856103d6565b93506104478185602086016103e7565b61045081610411565b840191505092915050565b600060208201905081810360008301526104758184610422565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104a88261047d565b9050919050565b6104b88161049d565b81146104c357600080fd5b50565b6000813590506104d5816104af565b92915050565b6000602082840312156104f1576104f061032d565b5b60006104ff848285016104c6565b91505092915050565b61051181610332565b82525050565b600060208201905061052c6000830184610508565b92915050565b7f416c726561647920766f74656400000000000000000000000000000000000000600082015250565b6000610568600d836103d6565b915061057382610532565b602082019050919050565b600060208201905081810360008301526105978161055b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006105d882610397565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361060a5761060961059e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061065c57607f821691505b60208210810361066f5761066e610615565b5b5091905056fea164736f6c634300081c000a",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c80634b9f5c981461005c5780635c8d954114610078578063753ec10314610096578063a2fcbad7146100b4578063d8bff5a5146100d2575b600080fd5b6100766004803603810190610071919061036a565b610102565b005b610080610273565b60405161008d91906103b0565b60405180910390f35b61009e610279565b6040516100ab919061045b565b60405180910390f35b6100bc610307565b6040516100c991906103b0565b60405180910390f35b6100ec60048036038101906100e791906104db565b61030d565b6040516100f99190610517565b60405180910390f35b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161561018f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101869061057e565b60405180910390fd5b60018060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550801561020957600260008154809291906101ff906105cd565b9190505550610222565b6003600081548092919061021c906105cd565b91905055505b3373ffffffffffffffffffffffffffffffffffffffff167f8eb81cb806dbb3d8a2f94981614331a55dfd90e06a42fdc362ca3ca96981d92f826040516102689190610517565b60405180910390a250565b60025481565b6000805461028690610644565b80601f01602080910402602001604051908101604052809291908181526020018280546102b290610644565b80156102ff5780601f106102d4576101008083540402835291602001916102ff565b820191906000526020600020905b8154815290600101906020018083116102e257829003601f168201915b505050505081565b60035481565b60016020528060005260406000206000915054906101000a900460ff1681565b600080fd5b60008115159050919050565b61034781610332565b811461035257600080fd5b50565b6000813590506103648161033e565b92915050565b6000602082840312156103805761037f61032d565b5b600061038e84828501610355565b91505092915050565b6000819050919050565b6103aa81610397565b82525050565b60006020820190506103c560008301846103a1565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156104055780820151818401526020810190506103ea565b60008484015250505050565b6000601f19601f8301169050919050565b600061042d826103cb565b61043781856103d6565b93506104478185602086016103e7565b61045081610411565b840191505092915050565b600060208201905081810360008301526104758184610422565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104a88261047d565b9050919050565b6104b88161049d565b81146104c357600080fd5b50565b6000813590506104d5816104af565b92915050565b6000602082840312156104f1576104f061032d565b5b60006104ff848285016104c6565b91505092915050565b61051181610332565b82525050565b600060208201905061052c6000830184610508565b92915050565b7f416c726561647920766f74656400000000000000000000000000000000000000600082015250565b6000610568600d836103d6565b915061057382610532565b602082019050919050565b600060208201905081810360008301526105978161055b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006105d882610397565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361060a5761060961059e565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061065c57607f821691505b60208210810361066f5761066e610615565b5b5091905056fea164736f6c634300081c000a",
  "linkReferences": {},
  "deployedLinkReferences": {}
}

declare module "@nomicfoundation/hardhat-viem/types" {
  export function deployContract(
    contractName: "Voting",
    constructorArgs: [_proposal: AbiParameterToPrimitiveType<{"name":"_proposal","type":"string"}>],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<Voting$Type["abi"]>>;
  export function deployContract(
    contractName: "contracts/Voting.sol:Voting",
    constructorArgs: [_proposal: AbiParameterToPrimitiveType<{"name":"_proposal","type":"string"}>],
    config?: DeployContractConfig
  ): Promise<GetContractReturnType<Voting$Type["abi"]>>;

  export function sendDeploymentTransaction(
    contractName: "Voting",
    constructorArgs: [_proposal: AbiParameterToPrimitiveType<{"name":"_proposal","type":"string"}>],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<Voting$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;
  export function sendDeploymentTransaction(
    contractName: "contracts/Voting.sol:Voting",
    constructorArgs: [_proposal: AbiParameterToPrimitiveType<{"name":"_proposal","type":"string"}>],
    config?: SendDeploymentTransactionConfig
  ): Promise<{
    contract: GetContractReturnType<Voting$Type["abi"]>;
    deploymentTransaction: GetTransactionReturnType;
  }>;

  export function getContractAt(
    contractName: "Voting",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<Voting$Type["abi"]>>;
  export function getContractAt(
    contractName: "contracts/Voting.sol:Voting",
    address: Address,
    config?: GetContractAtConfig
  ): Promise<GetContractReturnType<Voting$Type["abi"]>>;
}
